function CGame() {
  var e,
    t,
    n,
    a,
    s,
    i,
    o,
    r,
    _,
    l,
    u,
    h,
    d,
    c,
    S,
    T,
    E,
    p,
    P,
    f,
    g,
    C,
    I,
    m,
    M = !1;
  (this._init = function () {
    switch (
      ((t = 1),
      (n = 0),
      (e = !1),
      (g = !1),
      (C = 1),
      (I = COMMAND_STICK_START_SPEED),
      (c = 0),
      s_iGameMode)
    ) {
      case GAME_MODE_NINE:
        BALL_NUMBER = 9;
        break;
      case GAME_MODE_EIGHT:
      case GAME_MODE_TIME:
        BALL_NUMBER = 15;
    }
    (RACK_POS = STARTING_RACK_POS[s_iGameMode]),
      (u = new createjs.Container()),
      s_oStage.addChild(u);
    var a = createBitmap(s_oSpriteLibrary.getSprite("bg_game"));
    u.addChild(a),
      (h = new createjs.Container()),
      u.addChild(h),
      (d = new createjs.Container()),
      s_oStage.addChild(d),
      (_ = new CInterface(d)),
      (s = new CScene()),
      (l = new CTable(
        h,
        GAME_DIFFICULTY_PARAMS[s_iGameDifficulty]
      )).addEventListener(ON_LOST, this.gameOver, this),
      l.addEventListener(ON_WON, this.showWinPanel, this);
    (o = new CPlayerGUI(CANVAS_WIDTH / 2 - 400, 40, "", s_oStage)),
      (r = new CPlayerGUI(CANVAS_WIDTH / 2 + 400, 40, "", s_oStage)),
      (T = new createjs.Container()),
      s_oStage.addChild(T),
      (E = new CInputController(T)),
      (P = new createjs.Container()),
      s_oStageUpper3D.addChild(P),
      (f = new createjs.Container()),
      s_oStage.addChild(f),
      s_bMobile && (p = new CShotPowerBar(P, 123, 260, f)).hide(0);
    var m = new createjs.Shape();
    m.graphics.beginFill("black").drawRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT),
      s_oStageUpper3D.addChild(m),
      tweenVolume("soundtrack", SOUNDTRACK_VOLUME_IN_GAME, 1e3),
      (i = new CGameOverPanel(s_oStageUpper3D)).addEventListener(
        ON_EXIT_GAME,
        this.onExit,
        this
      ),
      (S = null),
      s_bInteractiveHelp
        ? ((S = new CInteractiveHelp(s_oStageUpper3D)).addEventListener(
            ON_END_TUTORIAL,
            this._onEndTutorial,
            this
          ),
          $("#canvas_upper_3d").css("pointer-events", "initial"),
          (s_bInteractiveHelp = !1))
        : this._onEndTutorial(),
      createjs.Tween.get(m)
        .to({ alpha: 0 }, 1e3, createjs.Ease.cubicIn)
        .call(function () {
          s_oStageUpper3D.removeChild(m), s_oGame._startInteractiveHelp();
        }),
      this.refreshButtonPos(),
      sizeHandler(),
      createjs.Tween.get(s).wait(s_iTimeElaps).call(s.update, null, s);
  }),
    (this._startInteractiveHelp = function () {
      S &&
        (s_bMobile
          ? (S.startTutorial({
              tutorial: TUTORIAL_MOVE_STICK_MOBILE,
              info: { movement: !1, on_show_tutorial: void 0 },
            }),
            S.startTutorial({
              tutorial: TUTORIAL_SHOT_MOBILE,
              info: { movement: !1, on_show_tutorial: void 0, param: p },
            }),
            S.startTutorial({
              tutorial: TUTORIAL_MOVE_STICK_BUTTONS,
              info: { movement: !1, on_show_tutorial: void 0 },
            }))
          : S.startTutorial({
              tutorial: TUTORIAL_SHOT_DESKTOP,
              info: { movement: !1, on_show_tutorial: void 0, param: p },
            }),
        S.startTutorial({
          tutorial: TUTORIAL_CUE_EFFECT,
          info: { movement: !1, on_show_tutorial: void 0 },
        }),
        S.startTutorial({
          tutorial: TUTORIAL_RESPOT_CUE,
          info: { movement: !1, on_show_tutorial: void 0 },
        }));
    }),
    (this._onMouseDownPowerBar = function () {
      s_oTable.startToShot();
    }),
    (this._onPressMovePowerBar = function (e) {
      s_oTable.holdShotStickMovement(e);
    }),
    (this._onPressUpPowerBar = function () {
      s_oTable.startStickAnimation() &&
        (s_oTable.sendShootPacketInfo(), p.setInput(!1));
    }),
    (this.hideShotBar = function () {
      s_bMobile && p.hide();
    }),
    (this.showShotBar = function () {
      s_bMobile && p.show();
    }),
    (this._onEndTutorial = function () {
      $("#canvas_upper_3d").css("pointer-events", "none"),
        (M = !0),
        S && (S.unload(), (S = null));
    }),
    (this._onPressDownStickCommand = function (e) {
      (C = e), (g = !0), (I = COMMAND_STICK_START_SPEED);
    }),
    (this._onPressUpStickCommand = function () {
      g = !1;
    }),
    (this.unload = function (e = null, t) {
      M = !1;
      var n = new createjs.Shape();
      n.graphics.beginFill("black").drawRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT),
        (n.alpha = 0),
        s_oStageUpper3D.addChild(n),
        createjs.Tween.get(n)
          .to({ alpha: 1 }, 700, createjs.Ease.cubicIn)
          .call(function () {
            l.unload(),
              _.unload(),
              s.unload(),
              i.unload(),
              s_oStageUpper3D.removeAllChildren(),
              s_oStage.removeAllChildren(),
              null !== e && e.call(t);
          });
    }),
    (this.reset = function () {
      (t = 1), (e = !1);
    }),
    (this.refreshButtonPos = function () {
      _.refreshButtonPos(),
        o.refreshButtonPos(),
        r.refreshButtonPos(),
        E.refreshOffsetPos(),
        (f.x = P.x = 0.5 * s_iOffsetX),
        S && S.refreshButtonsPos();
    }),
    (this.setNextBallToHit = function (e) {
      1 === t
        ? (r.setBallVisible(!1), o.setBall(e))
        : (o.setBallVisible(!1), r.setBall(e));
    }),
    (this.changeTurn = function (e) {
      1 === t
        ? (console.log("player1---------"),
          (t = 2),
          o.unlight(),
          r.highlight(),
          s_oTable.isCpuTurn() || s_oGame.showShotBar())
        : (console.log("player2---------"),
          (t = 1),
          o.highlight(),
          r.unlight(),
          s_oGame.showShotBar()),
        s_oInterface.resetSpin(),
        netPlayState === NPS_Take_Turn && (netPlayState = NPS_Waiting_Turn),
        netManager.sendPacket("Req_TurnChanged", null),
        e
          ? new CEffectText(TEXT_FAULT, s_oStageUpper3D)
          : new CEffectText(TEXT_CHANGE_TURN, s_oStageUpper3D);
    }),
    (this.assignSuits = function (n) {
      (a = new Array()),
        n < 8
          ? 1 === t
            ? ((a[0] = "solid"),
              (a[1] = "stripes"),
              this.setBallInInterface("solid"))
            : ((a[0] = "stripes"),
              (a[1] = "solid"),
              this.setBallInInterface("stripes"))
          : 1 === t
          ? ((a[0] = "stripes"),
            (a[1] = "solid"),
            this.setBallInInterface("stripes"))
          : ((a[0] = "solid"),
            (a[1] = "stripes"),
            this.setBallInInterface("solid")),
        (e = !0);
    }),
    (this.setBallInInterface = function (e) {
      "solid" == e
        ? (o.setBall(2), r.setBall(15))
        : (o.setBall(15), r.setBall(2));
    }),
    (this.isLegalShotFor8Ball = function (n, s) {
      return e
        ? ("solid" == a[t - 1] && n < 8) ||
            ("stripes" == a[t - 1] && n > 8) ||
            (8 == n && 0 == s)
        : 8 != n;
    }),
    (this.increaseWinStreak = function () {
      n++;
    }),
    (this.resetWinStreak = function () {
      n = 0;
    }),
    (this.gameOver = function (e) {
      i.show(e),
        $("#canvas_upper_3d").css("pointer-events", "initial"),
        (M = !1);
    }),
    (this.showWinPanel = function (e) {
      var t = s_iGameMode === GAME_MODE_CPU ? c : void 0;
      i.show(e, t),
        $("#canvas_upper_3d").css("pointer-events", "initial"),
        (M = !1);
    }),
    (this.onExit = function () {
      s.update(),
        tweenVolume("soundtrack", SOUNDTRACK_VOLUME_DEFAULT, 1e3),
        this.unload(s_oMain.gotoMenu, s_oMain),
        $(s_oMain).trigger("show_interlevel_ad"),
        $(s_oMain).trigger("end_session");
    }),
    (this.restartGame = function () {
      s.update(),
        this.unload(s_oMain.gotoGame, s_oMain),
        $(s_oMain).trigger("show_interlevel_ad"),
        $(s_oMain).trigger("end_session");
    }),
    (this.updateScore = function (e) {
      return;
    }),
    (this.getCurTurnID = function () {
      return Number(localStorage.getItem("curTurnID"));
    }),
    (this.getCurTurn = function () {
      return t;
    }),
    (this.setCurTurn = function (e) {
      t = e;
    }),
    (this.getNextTurn = function () {
      return 1 === t ? 2 : 1;
    }),
    (this.getSuiteForCurPlayer = function () {
      return a[t - 1];
    }),
    (this.isSuiteAssigned = function () {
      return e;
    }),
    (this.getPlayer1Name = function () {
      return o.getPlayerName();
    }),
    (this.getPlayer2Name = function () {
      return r.getPlayerName();
    }),
    (this.setPlayer1Name = function (e) {
      o.setPlayerName(e);
    }),
    (this.setPlayer2Name = function (e) {
      r.setPlayerName(e);
    }),
    (this._updateInput = function () {
      g &&
        (l.rotateStick(C * I),
        (I += COMMAND_STICK_SPEED_INCREMENT) >= COMMAND_STICK_MAX_SPEED &&
          (I = COMMAND_STICK_MAX_SPEED));
    }),
    (this.update = function () {
      switch (netPlayState) {
        case NPS_None:
          (m = new CEffectText(
            "Waiting a Player ...",
            s_oStageUpper3D,
            FX_Blink
          )),
            (netPlayState = NPS_Waiting_Player),
            // localStorage.setItem("userID", "sladar"),
            // localStorage.setItem("roomID", "10001"),
            (netManager = new NetManager()),
            netManager.connectServer();
          break;
        case NPS_Waiting_Player:
          break;
        case NPS_Start_Game:
          m.unload(),
            new CEffectText("Start Game", s_oStageUpper3D),
            (netPlayState = NPS_Waiting_Turn),
            netManager.sendPacket("Req_Waiting_Turn", null),
            (M = !0);
          break;
        case NPS_Waiting_Turn:
        case NPS_Take_Turn:
      }
      !1 !== M && (this._updateInput(), l.update(), s.update());
    }),
    (this.AddAllEventListeners = function () {
      E.addEventListener(
        ON_PRESS_DOWN_BUT_ARROW_LEFT,
        this._onPressDownStickCommand,
        this,
        -1
      ),
        E.addEventListener(
          ON_PRESS_UP_BUT_ARROW_LEFT,
          this._onPressUpStickCommand,
          this
        ),
        E.addEventListener(
          ON_PRESS_DOWN_BUT_ARROW_RIGHT,
          this._onPressDownStickCommand,
          this,
          1
        ),
        E.addEventListener(
          ON_PRESS_UP_BUT_ARROW_RIGHT,
          this._onPressUpStickCommand,
          this
        ),
        E.addInitEventListeners(),
        _.addInitEventListeners(),
        s_bMobile &&
          (p.addInitEventListener(),
          p.addEventListener(
            ON_MOUSE_DOWN_POWER_BAR,
            this._onMouseDownPowerBar,
            this
          ),
          p.addEventListener(
            ON_PRESS_MOVE_POWER_BAR,
            this._onPressMovePowerBar,
            this
          ),
          p.addEventListener(
            ON_PRESS_UP_POWER_BAR,
            this._onPressUpPowerBar,
            this
          ),
          p.show());
    }),
    (s_oGame = this),
    this._init();
}

var userTurnID,
  _iCurTurn,
  s_oGame = null;
