function CInterface(e) {
  var n,
    t,
    i,
    s,
    l,
    u,
    o,
    r,
    c,
    d,
    a = null,
    _ = null;
  return (
    (this._init = function (e) {
      (n = e), (t = new createjs.Container()), n.addChild(t);
      h = s_oSpriteLibrary.getSprite("audio_icon");
      (s = { x: CANVAS_WIDTH - h.width / 2 - 10, y: h.height / 2 + 10 }),
        (i = { x: CANVAS_WIDTH - h.width / 2 - 10, y: h.height / 2 + 10 }),
        !1 === DISABLE_SOUND_MOBILE || !1 === s_bMobile
          ? ((o = new CToggle(i.x, i.y, h, s_bAudioActive, t)).addEventListener(
              ON_MOUSE_UP,
              this._onAudioToggle,
              this
            ),
            (l = { x: i.x - h.width / 2, y: i.y }))
          : (l = { x: i.x - h.width, y: i.y });
      var u = window.document,
        S = u.documentElement;
      (a =
        S.requestFullscreen ||
        S.mozRequestFullScreen ||
        S.webkitRequestFullScreen ||
        S.msRequestFullscreen),
        (_ =
          u.exitFullscreen ||
          u.mozCancelFullScreen ||
          u.webkitExitFullscreen ||
          u.msExitFullscreen),
        !1 === ENABLE_FULLSCREEN && (a = !1),
        a &&
          screenfull.isEnabled &&
          ((h = s_oSpriteLibrary.getSprite("but_fullscreen")),
          (r = new CToggle(l.x, l.y, h, s_bFullscreen, t)).addEventListener(
            ON_MOUSE_UP,
            this._onFullscreenRelease,
            this
          ));
      var h = s_oSpriteLibrary.getSprite("but_settings");
      (c = new CGUIExpandible(s.x, s.y, h, t)),
        (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) || c.addButton(o),
        a && screenfull.isEnabled && c.addButton(r),
        (d = new CBallSpinGUI(CANVAS_WIDTH / 2 - 480, CANVAS_HEIGHT - 115, t)),
        this.refreshButtonPos();
    }),
    (this.unload = function () {
      u.unload(),
        (u = null),
        c.unload(),
        d.unload(),
        !1 === DISABLE_SOUND_MOBILE && (o.unload(), (o = null)),
        a && screenfull.isEnabled && r.unload(),
        t.removeAllChildren(),
        (s_oInterface = null);
    }),
    (this.refreshButtonPos = function () {
      c.refreshPos(), d.refreshOffsetPos(0, 0.5 * -s_iOffsetY);
    }),
    (this.resetSpin = function () {
      d.resetSpin();
    }),
    (this.getSideSpin = function () {
      return d.getSideSpin();
    }),
    (this.getBackSpin = function () {
      return d.getBackSpin();
    }),
    (this.setSideSpin = function (e) {
      d.setSideSpin(e);
    }),
    (this._onExit = function () {
      s_oGame.onExit();
    }),
    (this._onAudioToggle = function () {
      Howler.mute(s_bAudioActive), (s_bAudioActive = !s_bAudioActive);
    }),
    (this.resetFullscreenBut = function () {
      a && screenfull.isEnabled && r.setActive(s_bFullscreen);
    }),
    (this._onFullscreenRelease = function () {
      s_bFullscreen
        ? _.call(window.document)
        : a.call(window.document.documentElement),
        sizeHandler();
    }),
    (this.addInitEventListeners = function () {
      d.addInitEventListeners();
    }),
    (s_oInterface = this),
    this._init(e),
    this
  );
}
var s_oInterface = null;
