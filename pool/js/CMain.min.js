function CMain(e) {
  var i,
    s,
    t,
    a,
    o,
    r,
    n = 0,
    _ = 0,
    p = STATE_LOADING;
  (this.initContainer = function () {
    var e = document.getElementById("canvas_game");
    ((s_oStage = new createjs.Stage(e)).preventSelection = !1),
      createjs.Touch.enable(s_oStage, !0),
      console.log("Hello"),
      (s_oStageUpper3D = new createjs.Stage(
        document.getElementById("canvas_upper_3d")
      )),
      !1 === (s_bMobile = isMobile()) && s_oStage.enableMouseOver(20),
      (s_iPrevTime = new Date().getTime()),
      (createjs.Ticker.framerate = FPS),
      createjs.Ticker.on("tick", this._update),
      navigator.userAgent.match(/Windows Phone/i) &&
        (DISABLE_SOUND_MOBILE = !0),
      (s_oSpriteLibrary = new CSpriteLibrary()),
      (s_oLocalStorage = new CLocalStorage()),
      (t = new CPreloader());
  }),
    (this.preloaderReady = function () {
      (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) || this._initSounds(),
        this._loadImages(),
        (s = !0),
        (i = !0);
    }),
    (this.soundLoaded = function () {
      n++;
      var e = Math.floor((n / _) * 100);
      t.refreshLoader(e);
    }),
    (this._initSounds = function () {
      Howler.mute(!s_bAudioActive),
        (s_aSoundsInfo = new Array()).push({
          path: "./sounds/",
          filename: "click",
          loop: !1,
          volume: 1,
          ingamename: "click",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "level_win",
          loop: !1,
          volume: 1,
          ingamename: "level_win",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "game_over",
          loop: !1,
          volume: 1,
          ingamename: "game_over",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "ball_collision",
          loop: !1,
          volume: 1,
          ingamename: "ball_collision",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "ball_in_hole",
          loop: !1,
          volume: 1,
          ingamename: "ball_in_hole",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "edge_collision",
          loop: !1,
          volume: 1,
          ingamename: "edge_collision",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "stick_shot",
          loop: !1,
          volume: 1,
          ingamename: "stick_shot",
        }),
        s_aSoundsInfo.push({
          path: "./sounds/",
          filename: "soundtrack",
          loop: !0,
          volume: 1,
          ingamename: "soundtrack",
        }),
        (_ += s_aSoundsInfo.length),
        (s_aSounds = new Array());
      for (var e = 0; e < s_aSoundsInfo.length; e++)
        this.tryToLoadSound(s_aSoundsInfo[e], !1);
    }),
    (this.tryToLoadSound = function (e, i) {
      setTimeout(
        function () {
          s_aSounds[e.ingamename] = new Howl({
            src: [e.path + e.filename + ".mp3"],
            autoplay: !1,
            preload: !0,
            loop: e.loop,
            volume: e.volume,
            onload: s_oMain.soundLoaded,
            onloaderror: function (e, i) {
              for (var s = 0; s < s_aSoundsInfo.length; s++)
                if (
                  e === s_aSounds[s_aSoundsInfo[s].ingamename]._sounds[0]._id
                ) {
                  s_oMain.tryToLoadSound(s_aSoundsInfo[s], !0);
                  break;
                }
            },
            onplayerror: function (e) {
              for (var i = 0; i < s_aSoundsInfo.length; i++)
                if (
                  e === s_aSounds[s_aSoundsInfo[i].ingamename]._sounds[0]._id
                ) {
                  s_aSounds[s_aSoundsInfo[i].ingamename].once(
                    "unlock",
                    function () {
                      s_aSounds[s_aSoundsInfo[i].ingamename].play(),
                        "soundtrack" === s_aSoundsInfo[i].ingamename &&
                          null !== s_oGame &&
                          setVolume("soundtrack", SOUNDTRACK_VOLUME_IN_GAME);
                    }
                  );
                  break;
                }
            },
          });
        },
        i ? 200 : 0
      );
    }),
    (this._loadImages = function () {
      s_oSpriteLibrary.init(
        this._onImagesLoaded,
        this._onAllImagesLoaded,
        this
      ),
        s_oSpriteLibrary.addSprite("but_play", "./sprites/but_play.png"),
        s_oSpriteLibrary.addSprite("logo_menu", "./sprites/logo_menu.png"),
        s_oSpriteLibrary.addSprite("bg_game", "./sprites/bg_game.jpg"),
        s_oSpriteLibrary.addSprite("but_exit", "./sprites/but_exit.png"),
        s_oSpriteLibrary.addSprite("bg_menu", "./sprites/bg_menu.jpg"),
        s_oSpriteLibrary.addSprite("audio_icon", "./sprites/audio_icon.png"),
        s_oSpriteLibrary.addSprite("logo_ctl", "./sprites/logo_ctl.png"),
        s_oSpriteLibrary.addSprite("but_credits", "./sprites/but_credits.png"),
        s_oSpriteLibrary.addSprite(
          "but_fullscreen",
          "./sprites/but_fullscreen.png"
        ),
        s_oSpriteLibrary.addSprite(
          "but_settings",
          "./sprites/but_settings.png"
        ),
        s_oSpriteLibrary.addSprite("pool_table", "./sprites/pool_table.png"),
        s_oSpriteLibrary.addSprite("balls", "./sprites/2d_balls.png"),
        s_oSpriteLibrary.addSprite("stick", "./sprites/stick.png"),
        s_oSpriteLibrary.addSprite("player_gui", "./sprites/player_gui.png"),
        s_oSpriteLibrary.addSprite(
          "highlight_player",
          "./sprites/highlight_player.png"
        ),
        s_oSpriteLibrary.addSprite("msg_box", "./sprites/msg_box.png"),
        s_oSpriteLibrary.addSprite(
          "ball_spin_gui",
          "./sprites/ball_spin_gui.png"
        ),
        s_oSpriteLibrary.addSprite(
          "ball_spin_token",
          "./sprites/ball_spin_token.png"
        ),
        s_oSpriteLibrary.addSprite("but_home", "./sprites/but_home.png"),
        s_oSpriteLibrary.addSprite("but_restart", "./sprites/but_restart.png"),
        s_oSpriteLibrary.addSprite("but_lang", "./sprites/but_lang.png"),
        s_oSpriteLibrary.addSprite("but_next", "./sprites/but_next.png"),
        s_oSpriteLibrary.addSprite(
          "but_continue",
          "./sprites/but_continue.png"
        ),
        s_oSpriteLibrary.addSprite("but_yes", "./sprites/but_yes.png"),
        s_oSpriteLibrary.addSprite("but_no", "./sprites/but_no.png"),
        s_oSpriteLibrary.addSprite(
          "vs_man_panel",
          "./sprites/vs_man_panel.png"
        ),
        s_oSpriteLibrary.addSprite("vs_pc_panel", "./sprites/vs_pc_panel.png"),
        s_oSpriteLibrary.addSprite("but_text", "./sprites/but_text.png"),
        s_oSpriteLibrary.addSprite("ball_shadow", "./sprites/ball_shadow.png"),
        s_oSpriteLibrary.addSprite(
          "but_arrow_left",
          "./sprites/but_arrow_left.png"
        ),
        s_oSpriteLibrary.addSprite(
          "but_arrow_right",
          "./sprites/but_arrow_right.png"
        ),
        s_oSpriteLibrary.addSprite(
          "hand_cue_ball",
          "./sprites/hand_cue_ball.png"
        ),
        s_oSpriteLibrary.addSprite("shot_bar", "./sprites/shot_bar.png"),
        s_oSpriteLibrary.addSprite(
          "over_shot_bar",
          "./sprites/over_shot_bar.png"
        );
      for (s = 0; s < TABLE_UPPER_BUMPER.length; s++) {
        t = TABLE_UPPER_BUMPER[s].sprite;
        s_oSpriteLibrary.addSprite(t, "./sprites/" + t + ".png");
      }
      for (s = 0; s < 4; s++)
        s_oSpriteLibrary.addSprite(
          "bg_interactive_help_" + s,
          "./sprites/bg_interactive_help_" + s + ".png"
        );
      for (s = 0; s < HAND_ANIM_NUM_FRAMES; s++)
        s_oSpriteLibrary.addSprite(
          "hand_anim_" + s,
          "./sprites/hand_anim/hand_anim_" + s + ".png"
        );
      (_ += s_oSpriteLibrary.getNumSprites()), (s_oTextureLibrary = []);
      var e = new THREE.LoadingManager();
      (e.onLoad = this._onTexturesLoaded()), (_ += TEXTURE_NAME.length);
      for (
        var i = new THREE.TextureLoader(e), s = 0;
        s < TEXTURE_NAME.length;
        s++
      ) {
        var t = TEXTURE_NAME[s].name,
          a = TEXTURE_NAME[s].path;
        s_oTextureLibrary[t] = i.load(a, this._onImagesLoaded);
      }
      s_oSpriteLibrary.loadSprites();
    }),
    (this._onTexturesLoaded = function () {}),
    (this._onImagesLoaded = function () {
      n++;
      var e = Math.floor((n / _) * 100);
      t.refreshLoader(e);
    }),
    (this._onAllImagesLoaded = function () {}),
    (this._allResourcesLoaded = function () {
      t.unload();
      try {
        saveItem(LOCALSTORAGE_STRING + "ls_available", "ok");
      } catch (e) {
        s_bStorageAvailable = !1;
      }
      (s_oSoundTrack = playSound("soundtrack", 1, !0)), s_oMain.gotoMenu();
    }),
    (this.gotoMenu = function () {
      (a = new CMenu()), (p = STATE_MENU);
    }),
    (this.gotoDifficultyMenu = function () {
      (o = new CDifficutlyMenu()), (p = STATE_MENU);
    }),
    (this.gotoGame = function () {
      (r = new CGame()), (p = STATE_GAME);
    }),
    (this.levelSelected = function (e) {
      (s_iLevelSelected = e), e >= s_iLastLevel && (s_iLastLevel = e);
    }),
    (this.stopUpdateNoBlockAndTick = function () {
      s = !1;
    }),
    (this.startUpdateNoBlockAndTick = function () {
      s = !0;
    }),
    (this.stopUpdateNoBlock = function () {
      (i = !1), (createjs.Ticker.paused = !0);
    }),
    (this.startUpdateNoBlock = function () {
      (s_iPrevTime = new Date().getTime()),
        (i = !0),
        (createjs.Ticker.paused = !1);
    }),
    (this.stopUpdate = function () {
      (i = !1),
        (createjs.Ticker.paused = !0),
        $("#block_game").css("display", "block"),
        (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) || Howler.mute(!0);
    }),
    (this.startUpdate = function () {
      (s_iPrevTime = new Date().getTime()),
        (i = !0),
        (createjs.Ticker.paused = !1),
        $("#block_game").css("display", "none"),
        (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) ||
          (s_bAudioActive && Howler.mute(!1));
    }),
    (this._update = function (e) {
      if (!1 !== i) {
        var t = new Date().getTime();
        (s_iTimeElaps = t - s_iPrevTime),
          s_iCntFps++,
          (s_iPrevTime = t),
          (s_iCntTime += s_iTimeElaps) >= 1e3 &&
            ((s_iCurFps = s_iCntFps), (s_iCntTime -= 1e3), (s_iCntFps = 0)),
          p === STATE_GAME && s && r.update(),
          void 0 !== s_oStage && s_oStage.update(e),
          void 0 !== s_oStageUpper3D && s_oStageUpper3D.update(e);
      }
    }),
    (s_oMain = this),
    (s_bAudioActive = e.audio_enable_on_startup),
    (ENABLE_FULLSCREEN = e.fullscreen),
    (ENABLE_CHECK_ORIENTATION = e.check_orientation),
    (POINTS_FOR_BALL_POT = e.points_for_ball_pot),
    (POINTS_FOR_FAULT = e.points_for_fault);
  var d = navigator.language.split("-")[0];
  (s_iCurLang = LANG_CODES[d]),
    console.log("LANG_CODES[" + navigator.language + "] " + s_iCurLang),
    refreshLanguage(),
    this.initContainer();
}
var s_bMobile,
  s_oDrawLayer,
  s_oStage,
  s_oStageUpper3D,
  s_oSpriteLibrary,
  s_oTextureLibrary,
  s_oLocalStorage,
  s_aSoundsInfo,
  s_bAudioActive = !1,
  s_iCntTime = 0,
  s_iTimeElaps = 0,
  s_iPrevTime = 0,
  s_iCntFps = 0,
  s_iCurFps = 0,
  s_oSoundTrack = null,
  s_oMain = null,
  s_bFullscreen = !1,
  s_bStorageAvailable = !0,
  s_bInteractiveHelp = !1,
  s_iGameMode = GAME_MODE_EIGHT,
  s_iPlayerMode = GAME_MODE_CPU,
  s_iCurLang = LANG_EN,
  s_iGameDifficulty = HARD;
