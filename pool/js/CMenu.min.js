function CMenu() {
  var e,
    t,
    s,
    i,
    n,
    o,
    _,
    a,
    r,
    l,
    u,
    c,
    d,
    g,
    E,
    S = null,
    h = null;
  (this._init = function () {
    (_ = createBitmap(s_oSpriteLibrary.getSprite("bg_menu"))),
      s_oStage.addChild(_),
      (i = { x: CANVAS_WIDTH / 2 - 250, y: CANVAS_HEIGHT - 170 }),
      (r = new CGfxButton(
        i.x,
        i.y,
        s_oSpriteLibrary.getSprite("vs_pc_panel"),
        s_oStage
      )).addEventListener(ON_MOUSE_UP, this._onButPlaySingle, this),
      (n = { x: CANVAS_WIDTH / 2 + 250, y: CANVAS_HEIGHT - 170 }),
      (l = new CGfxButton(
        n.x,
        n.y,
        s_oSpriteLibrary.getSprite("vs_man_panel"),
        s_oStage
      )).addEventListener(ON_MOUSE_UP, this._onButPlayTwo, this);
    var A = s_oSpriteLibrary.getSprite("but_lang");
    if (!1 === DISABLE_SOUND_MOBILE || !1 === s_bMobile) {
      f = s_oSpriteLibrary.getSprite("audio_icon");
      (e = { x: CANVAS_WIDTH - f.height / 2 - 10, y: f.height / 2 + 10 }),
        (u = new CToggle(
          e.x,
          e.y,
          f,
          s_bAudioActive,
          s_oStage
        )).addEventListener(ON_MOUSE_UP, this._onAudioToggle, this),
        (o = { x: e.x - A.width / NUM_LANGUAGES - 10, y: e.y });
    } else o = { x: CANVAS_WIDTH - f.width / 4 - 10, y: f.height / 2 + 10 };
    (E = new CButLang(
      o.x,
      o.y,
      NUM_LANGUAGES,
      s_iCurLang,
      A,
      s_oStage
    )).addEventListener(ON_SELECT_LANG, this._onChangeLang, this);
    var f = s_oSpriteLibrary.getSprite("but_credits");
    (t = { x: f.width / 2 + 10, y: f.height / 2 + 10 }),
      (c = new CGfxButton(t.x, t.y, f, s_oStage)).addEventListener(
        ON_MOUSE_UP,
        this._onButCreditsRelease,
        this
      );
    var M = window.document,
      O = M.documentElement;
    (S =
      O.requestFullscreen ||
      O.mozRequestFullScreen ||
      O.webkitRequestFullScreen ||
      O.msRequestFullscreen),
      (h =
        M.exitFullscreen ||
        M.mozCancelFullScreen ||
        M.webkitExitFullscreen ||
        M.msExitFullscreen),
      !1 === ENABLE_FULLSCREEN && (S = !1),
      S &&
        screenfull.isEnabled &&
        ((f = s_oSpriteLibrary.getSprite("but_fullscreen")),
        (s = { x: t.x + f.width / 2 + 10, y: t.y }),
        (g = new CToggle(
          s.x,
          s.y,
          f,
          s_bFullscreen,
          s_oStage
        )).addEventListener(ON_MOUSE_UP, this._onFullscreenRelease, this));
    var b = s_oSpriteLibrary.getSprite("logo_menu");
    if (
      ((a = createBitmap(b)),
      (a.regX = b.width / 2),
      (a.regY = b.height / 2),
      (a.x = -a.regX),
      (a.y = CANVAS_HEIGHT / 2 - 160),
      s_oStage.addChild(a),
      createjs.Tween.get(a, { override: !0 }).to(
        { x: CANVAS_WIDTH / 2 },
        1e3,
        createjs.Ease.cubicOut
      ),
      !s_oLocalStorage.isUsed())
    ) {
      var y = new CAreYouSurePanel();
      y.changeMessage(TEXT_ERR_LS, -170), y.setOneButton();
    }
    (d = new createjs.Shape()).graphics
      .beginFill("black")
      .drawRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT),
      s_oStage.addChild(d),
      createjs.Tween.get(d).to({ alpha: 0 }, 1e3, createjs.Ease.cubicOut),
      $("#canvas_upper_3d").css("pointer-events", "none"),
      sizeHandler();
  }),
    (this._onExit = function (e) {
      d.on("click", function () {}),
        createjs.Tween.get(a, { override: !0 }).to(
          { x: CANVAS_WIDTH + a.regX },
          1e3,
          createjs.Ease.cubicIn
        ),
        (d.visible = !0),
        createjs.Tween.get(d)
          .to({ alpha: 1 }, 1e3, createjs.Ease.cubicOut)
          .call(e);
    }),
    (this.unload = function () {
      r.unload(),
        c.unload(),
        l.unload(),
        (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) ||
          (u.unload(), (u = null)),
        S && screenfull.isEnabled && g.unload(),
        E.unload(),
        d.removeAllEventListeners(),
        s_oStage.removeAllChildren(),
        (s_oMenu = null);
    }),
    (this.refreshButtonPos = function () {
      (!1 !== DISABLE_SOUND_MOBILE && !1 !== s_bMobile) ||
        u.setPosition(e.x - s_iOffsetX, s_iOffsetY + e.y),
        S &&
          screenfull.isEnabled &&
          g.setPosition(s.x + s_iOffsetX, s.y + s_iOffsetY),
        c.setPosition(t.x + s_iOffsetX, t.y + s_iOffsetY),
        r.setPosition(i.x, i.y - s_iOffsetY),
        l.setPosition(n.x, n.y - s_iOffsetY),
        (a.scaleX = a.scaleY =
          linearFunction(s_iOffsetY, 0, EDGEBOARD_Y, 1, 0.9)),
        E.setPosition(o.x - s_iOffsetX, o.y + s_iOffsetY);
    }),
    (this._onButPlaySingle = function () {
      (s_iPlayerMode = GAME_MODE_CPU),
        (s_iGameMode = GAME_MODE_EIGHT),
        this._onExit(function () {
          s_oMenu.unload(),
            s_oMain.gotoGame(),
            $(s_oMain).trigger("start_session");
        });
    }),
    (this._onButPlayTwo = function () {
      (s_iPlayerMode = GAME_MODE_TWO),
        (s_iGameMode = GAME_MODE_EIGHT),
        this._onExit(function () {
          s_oMenu.unload(),
            s_oMain.gotoGame(),
            $(s_oMain).trigger("start_session");
        });
    }),
    (this._onChangeLang = function (e) {
      (s_iCurLang = e), refreshLanguage();
    }),
    (this._onButCreditsRelease = function () {
      new CCreditsPanel();
    }),
    (this._onAudioToggle = function () {
      Howler.mute(s_bAudioActive), (s_bAudioActive = !s_bAudioActive);
    }),
    (this.resetFullscreenBut = function () {
      S && screenfull.isEnabled && g.setActive(s_bFullscreen);
    }),
    (this._onFullscreenRelease = function () {
      s_bFullscreen
        ? h.call(window.document)
        : S.call(window.document.documentElement),
        sizeHandler();
    }),
    (s_oMenu = this),
    this._init(),
    this._onExit(function () {
      s_oMenu.unload(),
        (s_iPlayerMode = GAME_MODE_CPU),
        (s_iGameMode = GAME_MODE_EIGHT),
        s_oMain.gotoGame(),
        $(s_oMain).trigger("start_session");
    });
}
var s_oMenu = null;
