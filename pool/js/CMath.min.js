function angleBetweenVectors(t,e){var g=Math.acos(dotProductV2(t,e)/(t.length()*e.length()));return!0===isNaN(g)?0:g}function centerBetweenPointsV2(t,e){var g=new CVector2;return g.set((t.getX()+e.getX())/2,(t.getY()+e.getY())/2),g}function distance2(t,e){return(e.getX()-t.getX())*(e.getX()-t.getX())+(e.getY()-t.getY())*(e.getY()-t.getY())}function distance(t,e){return Math.sqrt((e.getX()-t.getX())*(e.getX()-t.getX())+(e.getY()-t.getY())*(e.getY()-t.getY()))}function easeQuintIn(t,e,g,n){return g*(t/=n)*t*t*t*t+e}function easeCubicInOut(t,e,g,n){if(!(t>n))return(t/=n/2)<1?g/2*t*t*t+e:g/2*((t-=2)*t*t+2)+e}function easeBackIn(t,e,g,n,r){return void 0==r&&(r=1.70158),g*(t/=n)*t*((r+1)*t-r)+e}function easeElasticIn(t,e,g,n,r,i){if(0==t)return e;if(1==(t/=n))return e+g;if(i||(i=.3*n),!r||r<Math.abs(g)){r=g;o=i/4}else var o=i/(2*Math.PI)*Math.asin(g/r);return-r*Math.pow(2,10*(t-=1))*Math.sin((t*n-o)*(2*Math.PI)/i)+e}function toRadian(t){return t*(Math.PI/180)}function toDegree(t){return t*(180/Math.PI)}function dotProductV2(t,e){return t.getX()*e.getX()+t.getY()*e.getY()}function perpProductV2(t,e){return t.getX()*e.getY()-t.getY()*e.getX()}function reflectVectorV2(t,e){var g=new CVector2,n=dotProductV2(t,e);return g.set(t.getX()-2*n*e.getX(),t.getY()-2*n*e.getY()),g}function classifySphere(t,e,g,n){var r=e.getX()*t.getX()+e.getY()*t.getY()+planeDistance(e,g);return Math.abs(r)<n?r>=0?"INTERSECT FRONT":"INTERSECT BEHIND":r>=n?"FRONT":"BEHIND"}function planeDistance(t,e){return-(t.getX()*e.getX()+t.getY()*e.getY())}function randRange(t,e){return Math.floor(Math.random()*(e-t+1))+t}function randRangeReal(t,e){return Math.random()*(e-t+1)+t}function rotateVector2D(t,e){var g=e.getX()*Math.cos(t)+e.getY()*Math.sin(t),n=e.getX()*-Math.sin(t)+e.getY()*Math.cos(t);e.set(g,n)}function closestPointOnLine(t,e,g){var n=new CVector2;n.setV(g),n.subtract(t);var r=new CVector2;r.setV(e),r.subtract(t),r.normalize();var i=dotProductV2(r,n);return i<=0?t:i>=distance(t,e)?e:(r.scalarProduct(i),r.add(t),r)}function rectInRect(t,e){return e.x<=t.x&&e.y<=t.y&&e.width>=t.width&&e.height>=t.height}function collideEdgeWithCircle(t,e,g,n){var r=closestPointOnLine(t.getPointA(),t.getPointB(),e),i=distance(e,r);return n&&(n.iDistance=i,n.vClosestPoint=r),!(g<i)}function collideEdgeWithEdge(t,e,g){var n,r,i,o,a=t.getPointA(),Y=t.getPointB(),u=e.getPointA(),c=e.getPointB();return 0!=(o=a.getX()*(c.getY()-u.getY())+Y.getX()*(u.getY()-c.getY())+c.getX()*(Y.getY()-a.getY())+u.getX()*(a.getY()-Y.getY()))&&(i=a.getX()*(c.getY()-u.getY())+u.getX()*(a.getY()-c.getY())+c.getX()*(u.getY()-a.getY()),n=i/o,i=-(a.getX()*(u.getY()-Y.getY())+Y.getX()*(a.getY()-u.getY())+u.getX()*(Y.getY()-a.getY())),r=i/o,g&&g.set(a.getX()+n*(Y.getX()-a.getX()),a.getY()+n*(Y.getY()-a.getY())),0<=n&&n<=1&&0<=r&&r<=1)}function lineInterpolate(t,e,g){var n=t.getPointA(),r=t.getPointB(),i=Math.abs(n.getX()-r.getX()),o=Math.abs(n.getY()-r.getY()),a=r.getX()-n.getX(),Y=r.getY()-n.getY(),u=Math.sqrt(Math.pow(i,2)+Math.pow(o,2))/e,c=a/u,X=Y/u,s=0,p=0,_=new Array,m=u-(g=void 0!==g?g>u?u:g:u);for(m;m<u;m++)s=n.getX()+c*m,p=n.getY()+X*m,_.push(new CVector2(s,p));return _}function intersect2D_Segments(t,e,g,n){var r=new CVector2,i=new CVector2,o=new CVector2;r.set(t.m_pB.getX()-t.m_pA.getX(),t.m_pB.getY()-t.m_pA.getY()),i.set(e.m_pB.getX()-e.m_pA.getX(),e.m_pB.getY()-e.m_pA.getY()),o.set(t.m_pA.getX()-e.m_pA.getX(),t.m_pA.getY()-e.m_pA.getY());var a=perpProductV2(r,i);if(Math.abs(a)<1e-8){if(0!=perpProductV2(r,o)||0!=perpProductV2(i,o))return 0;var Y=dotProductV2(r,r),u=dotProductV2(i,i);if(0==Y&&0==u)return t.m_pA.getX()!=e.m_pA.getX()||t.m_pA.getY()!=e.m_pA.getY()?0:(g=t.m_pA,1);if(0==Y)return 0==inSegment(t.m_pA,e)?0:(g=t.m_pA,1);if(0==u)return 0==inSegment(e.m_pA,t)?0:(g=e.m_pA,1);var c,X,s=new CVector2;if(s.set(t.m_pB.getX()-e.m_pA.getX(),t.m_pB.getY()-e.m_pA.getY()),0!=i.getX()?(c=o.getX()/i.getX(),X=s.getX()/i.getX()):(c=o.getY()/i.getY(),X=s.getY()/i.getY()),c>X){var p=c;c=X,X=p}return c>1||X<0?0:(c=c<0?0:c,X=X>1?1:X,c==X?(g.set(e.m_pA.getX()+c*i.getX(),e.m_pA.getY()+c*i.getY()),1):(g.set(e.m_pA.getX()+c*i.getX(),e.m_pA.getY()+c*i.getY()),n.set(e.m_pA.getX()+X*i.getX(),e.m_pA.getY()+X*i.getY()),2))}var _=perpProductV2(i,o)/a;if(_<0||_>1)return 0;var m=perpProductV2(r,o)/a;return m<0||m>1?0:(g.set(t.m_pA.getX()+_*r.getX(),t.m_pA.getY()+_*r.getY()),1)}function inSegment(t,e){if(e.m_pA.getX()!=e.m_pB.getX()){if(e.m_pA.getX()<=t.getX()&&t.getX()<=e.m_pB.getX())return 1;if(e.m_pA.getX()>=t.getX()&&t.getX()>=e.m_pB.getX())return 1}else{if(e.m_pA.getY()<=t.getY()&&t.getY()<=e.m_pB.getY())return 1;if(e.m_pA.getY()>=t.getY()&&t.getY()>=e.m_pB.getY())return 1}return 0}function detectCollisionPointCircle(t,e,g){var n=t.getX()-e.getX(),r=t.getY()-e.getY();return sqrt(n*n+r*r)<=g}function tweenVectors(t,e,g,n){return g.set(t.getX()+n*(e.getX()-t.getX()),t.getY()+n*(e.getY()-t.getY())),g}var SIN_PI=Math.sin(Math.PI),DOUBLE_PI=2*Math.PI,HALF_PI=Math.PI/2,SIN_HALF_PI=Math.sin(HALF_PI),SIN_DOUBLE_PI=Math.sin(DOUBLE_PI);